<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Blog Dimas Irgiansyah</title>
    <link>https://blog.dimasirgiansyah.my.id/tags/python/</link>
    <description>Recent content in Python on Blog Dimas Irgiansyah</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 07 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.dimasirgiansyah.my.id/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cheatsheet Python untuk Developer Modern</title>
      <link>https://blog.dimasirgiansyah.my.id/posts/cheatsheet-python-untuk-developer-mode/</link>
      <pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.dimasirgiansyah.my.id/posts/cheatsheet-python-untuk-developer-mode/</guid>
      <description>Kuasai Python dengan Cepat: Cheatsheet Praktis Cheatsheet ini memberikan ringkasan sintaks dan konsep penting dalam Python, cocok untuk pemula maupun yang ingin menyegarkan ingatan. Kita akan membahas tipe data, struktur kontrol, fungsi, dan sedikit tips praktis.&#xA;Mengenal Python: Bahasa Serbaguna Python merupakan bahasa pemrograman tingkat tinggi yang populer karena sintaksnya yang mudah dibaca dan fleksibilitasnya. Python digunakan luas dalam berbagai bidang, mulai dari pengembangan web, data science, machine learning, hingga scripting.</description>
    </item>
    <item>
      <title>Best practice menggunakan bahasa Python</title>
      <link>https://blog.dimasirgiansyah.my.id/posts/best-practice-menggunakan-python/</link>
      <pubDate>Tue, 18 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.dimasirgiansyah.my.id/posts/best-practice-menggunakan-python/</guid>
      <description>Best practice dalam Python tergantung pada konteks penggunaannya, misalnya untuk web development, data science, atau automation. Tapi secara umum, berikut adalah beberapa best practice yang berlaku secara luas:&#xA;âœ¨ 1. Gunakan Versi Python yang Terbaru (Stable) Pastikan selalu menggunakan versi Python terbaru yang masih mendapatkan update keamanan dan fitur baru.&#xA;Cek versi Python yang sedang digunakan:&#xA;python --version ðŸ“œ 2. Gunakan Penulisan Kode Sesuai PEP 8 PEP 8 adalah standar gaya penulisan kode Python yang membuat kode lebih mudah dibaca.</description>
    </item>
    <item>
      <title>Contoh File Dari Rekomendasi Folder Python FastAPI Project</title>
      <link>https://blog.dimasirgiansyah.my.id/posts/contoh-file-dari-rekomendasi-folder-python-fastapi-project/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.dimasirgiansyah.my.id/posts/contoh-file-dari-rekomendasi-folder-python-fastapi-project/</guid>
      <description>Tentu! Berikut adalah contoh lengkap untuk setiap file dan folder dalam struktur folder FastAPI yang telah saya jelaskan sebelumnya. Saya akan memberikan contoh kode untuk setiap file utama, termasuk contoh main.py, API endpoints, model, schema, dan sebagainya. Ini akan memberikan gambaran lebih jelas tentang bagaimana mengorganisasi aplikasi FastAPI yang skalabel.&#xA;1. my_fastapi_project/app/main.py from fastapi import FastAPI from app.api.v1 import endpoints app = FastAPI() # Include the routes from the API version 1 app.</description>
    </item>
    <item>
      <title>Jika Kamu Bingung Kok Ada File __init__.py tapi gak ada dicontoh, ini solusinya</title>
      <link>https://blog.dimasirgiansyah.my.id/posts/jika-kamu-bingung-kok-ada-file-__init__.py-tapi-gak-ada-dicontoh-ini-solusinya/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.dimasirgiansyah.my.id/posts/jika-kamu-bingung-kok-ada-file-__init__.py-tapi-gak-ada-dicontoh-ini-solusinya/</guid>
      <description>Berikut adalah contoh isi dari file __init__.py yang perlu dimasukkan dalam setiap folder untuk memastikan folder tersebut diperlakukan sebagai paket Python (module), dan memungkinkan Anda untuk mengimpor modul-modul dalam folder tersebut.&#xA;1. my_fastapi_project/app/__init__.py File ini akan menginisialisasi folder app sebagai paket. Biasanya file ini kosong, tetapi kadang bisa berisi pengaturan atau import global.&#xA;# app/__init__.py # Tidak ada yang perlu dimasukkan di sini jika tidak ada pengaturan tambahan # Tetapi Anda bisa menambah kode global yang ingin diekspor jika diperlukan 2.</description>
    </item>
    <item>
      <title>Recommendation Structure Folder For a Python FastAPI Projects</title>
      <link>https://blog.dimasirgiansyah.my.id/posts/recommendation-structure-folder-for-a-python-fastapi-projects/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.dimasirgiansyah.my.id/posts/recommendation-structure-folder-for-a-python-fastapi-projects/</guid>
      <description>When structuring a folder for a Python FastAPI project, it&amp;rsquo;s essential to maintain modularity and scalability, especially as your project grows. A good folder structure helps to separate concerns, making it easier to manage and maintain the codebase.&#xA;Here&amp;rsquo;s a recommended folder structure for a typical FastAPI project:&#xA;Recommended Folder Structure my_fastapi_project/ â”‚ â”œâ”€â”€ app/ # Main application code â”‚ â”œâ”€â”€ __init__.py â”‚ â”œâ”€â”€ main.py # Entry point for the FastAPI application â”‚ â”œâ”€â”€ api/ # API routes and business logic â”‚ â”‚ â”œâ”€â”€ __init__.</description>
    </item>
  </channel>
</rss>
